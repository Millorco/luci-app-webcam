#!/bin/sh
# ---------------------------------------------------
#
# Capture image with EOS camera
#
# ---------------------------------------------------
#

. /usr/bin//webcam.cfg

cd /tmp
NOW=$(date +"%Y%m%d-%H%M")
FILENAME="webcam_$NOW.jpg"



#
# Funzione check day night 1
#
function start {
    # Chiamata all'API Sunrise-Sunset (in formato UTC)
    API_URL="https://api.sunrise-sunset.org/json?lat=$WC_LATITUDE&lng=$WC_LONGITUDE&formatted=0"
    RESPONSE=$(curl -s "$API_URL")
    
    # Estrai l'orario di alba e tramonto dalla risposta JSON
    ALBA=$(echo "$RESPONSE" | grep -o '"sunrise":"[^"]*' | cut -d '"' -f 4 | cut -d 'T' -f2 | cut -d 'Z' -f1)
    TRAMONTO=$(echo "$RESPONSE" | grep -o '"sunset":"[^"]*' | cut -d '"' -f 4 | cut -d 'T' -f2 | cut -d 'Z' -f1)
    
    echo "Orario Alba UTC: " $ALBA
    echo "Orario Tramonto UTC: " $TRAMONTO
    
    # Ottieni l'orario corrente in formato UTC (ora:minuti)
    CURRENT_TIME=$(date -u +%H:%M)
    echo "Ora Corrente UTC: " $CURRENT_TIME
    
    # Confronta orari: se l'ora corrente è tra alba e tramonto, è giorno, altrimenti è notte
    if [[ "$CURRENT_TIME" > "$ALBA" ]] && [[ "$CURRENT_TIME" < "$TRAMONTO" ]]; then
        echo "Cattura giorno"
        capture_day
    else
        echo "Cattura Notte"  
        capture_night
    fi
}


#
# Funzione cattura per giorno
#
function capture_day {
    rm -f *.jpg 2>/dev/null
    # Heizung aus, um genug Strom zu haben
    webcam_heater tmpoff
    echo "$WC_NAME $NOW: Capture image (DAY mode)..."
    
    gphoto2 --set-config eosremoterelease=3 \
    --set-config eosremoterelease=4 \
    --set-config imagesize=$DAY_IMAGE_SIZE \
    --set-config imageformat=$WC_IMAGEFORMAT \
    --set-config imagequality=$DAY_IMAGE_QUALITY \
    --set-config whitebalance=$WC_WHITEBALANCE \
    --set-config iso=$WC_ISO_DAY \
    --set-config aperture=$WC_APERTURE_DAY \
    --set-config shutterspeed=$WC_SHUTTERSPEED_DAY \
    --get-all-metadata \
    --wait-event-and-download=$DAY_WAIT_EVENT \
    --capture-image-and-download \
    --force-overwrite \
    --filename $FILENAME 2>&1 | grep -v Property
    
    # Heizung wieder auf vorherigen Stand
    webcam_heater reset
    upload
}


#
# Funzione cattura per Notte  
#
function capture_night {
    rm -f *.jpg 2>/dev/null
    
    # Heizung aus, um genug Strom zu haben
    webcam_heater tmpoff
    echo "$WC_NAME $NOW: Capture image (NIGHT mode)..."

    
    gphoto2 --set-config eosremoterelease=3 \
    --set-config eosremoterelease=4 \
    --set-config imagesize=$NIGHT_IMAGE_SIZE \
    --set-config imageformat=$WC_IMAGEFORMAT \
    --set-config imagequality=$NIGHT_IMAGE_QUALITY \
    --set-config whitebalance=$WC_WHITEBALANCE \
    --set-config iso=$WC_ISO_NIGHT \
    --set-config aperture=$WC_APERTURE_NIGHT \
    --set-config shutterspeed=$WC_SHUTTERSPEED_NIGHT \
    --get-all-metadata \
    --wait-event-and-download=$NIGHT_WAIT_EVENT \
    --capture-image-and-download \
    --force-overwrite \
    --filename $FILENAME 2>&1 | grep -v Property
    
    # Heizung wieder auf vorherigen Stand  
    webcam_heater reset
    upload
}


#
# Funzione Upload Foto
#
function upload {
    mv *.jpg raw.jpg || return 1
    echo "$WC_NAME $NOW: Upload image..."
    echo "state=upload" | curl -s --form log=@- $wc_curlpar/log.php
    curl -sw '\n%{time_total}s %{size_upload}Bytes %{speed_upload}Bytes/s\n' \
         --limit-rate 100k \
         --form upload=@raw.jpg --form now=$NOW $wc_curlpar/upload.php
}


# Avvia il processo principale
start
