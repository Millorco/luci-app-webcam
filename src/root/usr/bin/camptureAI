#!/bin/sh
# ---------------------------------------------------
#
# Capture image with EOS camera
#
# ---------------------------------------------------
#

. /usr/bin//webcam.cfg

cd /tmp
NOW=$(date +"%Y%m%d-%H%M")
FILENAME="webcam_$NOW.jpg"



#
# Funzione check day night 1
#
function start {
	# Recupera orari alba/tramonto da API sunrise-sunset.org (UTC)
	DATA=$(wget -qO- "https://api.sunrise-sunset.org/json?lat=$WC_LATITUDE&lng=$WC_LONGITUDE&formatted=0")

	# Estrai orari alba e tramonto (in UTC)
	RISE=$(echo $DATA | jq -r '.results.sunrise')
	SET=$(echo $DATA | jq -r '.results.sunset')

	# Ora attuale in UTC
	NOW=$(date -u +"%Y-%m-%dT%H:%M:%S")

	# Confronto
	if [ "$NOW" \> "$RISE" ] && [ "$NOW" \< "$SET" ]; then
		echo "giorno"
		capture_day
	else
		echo "notte"
		capture_night
	fi

}


#
# Funzione cattura per giorno
#
function capture_day {
    rm -f *.jpg 2>/dev/null
    # Heizung aus, um genug Strom zu haben
    . /usr/bin//serialsend h
    echo "$WC_NAME $NOW: Capture image (DAY mode)..."
    
    gphoto2 --set-config eosremoterelease=3 \
    --set-config eosremoterelease=4 \
    --set-config whitebalance=$WC_WHITEBALANCE \
    --set-config iso=$WC_ISO_DAY \
    --set-config aperture=$WC_APERTURE_DAY \
    --set-config shutterspeed=$WC_SHUTTERSPEED_DAY \
    --get-all-metadata \
    --capture-image-and-download \
    --force-overwrite \
    --filename $FILENAME 2>&1 | grep -v Property
    
    # Heizung wieder auf vorherigen Stand
    . /usr/bin//serialsend H
    upload
}


#
# Funzione cattura per Notte  
#
function capture_night {
    rm -f *.jpg 2>/dev/null
    
    # Heizung aus, um genug Strom zu haben
    . /usr/bin//serialsend h
    echo "$WC_NAME $NOW: Capture image (NIGHT mode)..."

    
    gphoto2 --set-config eosremoterelease=3 \
    --set-config eosremoterelease=4 \
    --set-config whitebalance=$WC_WHITEBALANCE \
    --set-config iso=$WC_ISO_NIGHT \
    --set-config aperture=$WC_APERTURE_NIGHT \
    --set-config shutterspeed=$WC_SHUTTERSPEED_NIGHT \
    --get-all-metadata \
    --capture-image-and-download \
    --force-overwrite \
    --filename $FILENAME 2>&1 | grep -v Property
    
    # Heizung wieder auf vorherigen Stand  
    . /usr/bin//serialsend H
    upload
}


#
# Funzione Upload Foto
#
function upload {
    mv *.jpg raw.jpg || return 1

# Costruisci l'URL di destinazione completo
TARGET_URL="${WC_UPLOAD_SERVER}${WC_UPLOAD_DIRECTORY}"

# -T: specifica il file da caricare
curl -T "$FILE_TO_UPLOAD" -u "$WC_UPLOAD_USERNAME:$WC_UPLOAD_PASSWORD" --ftp-create-dirs "$TARGET_URL"

# Controlla il codice di ritorno di curl per verificare il successo
if [ $? -eq 0 ]; then
  echo "Caricamento completato con successo!"
else
  echo "Errore durante il caricamento del file."
  exit 1
fi
}


# Avvia il processo principale
start
